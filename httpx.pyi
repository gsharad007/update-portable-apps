from typing import Any, Iterator, Optional, Type

class HTTPError(Exception): ...

class Response:
    status_code: int
    headers: dict[str, str]
    def iter_bytes(self, chunk_size: int) -> Iterator[bytes]: ...
    def __enter__(self) -> Response: ...
    def __exit__(
        self,
        exc_type: Type[BaseException] | None,
        exc: BaseException | None,
        tb: Any,
    ) -> bool: ...

class Client:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def stream(self, method: str, url: str, *, headers: dict[str, str]) -> Response: ...
    def __enter__(self) -> Client: ...
    def __exit__(
        self,
        exc_type: Type[BaseException] | None,
        exc: BaseException | None,
        tb: Any,
    ) -> bool: ...
